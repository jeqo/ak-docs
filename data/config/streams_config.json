[{"name":"application.id","documentation":"An identifier for the stream processing application. Must be unique within the Kafka cluster. It is used as 1) the default client-id prefix, 2) the group-id for membership management, 3) the changelog topic prefix.","headers":{"Type":"string","Default":"","Valid Values":"","Importance":"high"}},{"name":"bootstrap.servers","documentation":"A list of host/port pairs to use for establishing the initial connection to the Kafka cluster. The client will make use of all servers irrespective of which servers are specified here for bootstrapping&mdash;this list only impacts the initial hosts used to discover the full set of servers. This list should be in the form <code>host1:port1,host2:port2,...</code>. Since these servers are just used for the initial connection to discover the full cluster membership (which may change dynamically), this list need not contain the full set of servers (you may want more than one, though, in case a server is down).","headers":{"Type":"list","Default":"","Valid Values":"","Importance":"high"}},{"name":"num.standby.replicas","documentation":"The number of standby replicas for each task.","headers":{"Type":"int","Default":"0","Valid Values":"","Importance":"high"}},{"name":"state.dir","documentation":"Directory location for state store. This path must be unique for each streams instance sharing the same underlying filesystem.","headers":{"Type":"string","Default":"/tmp/kafka-streams","Valid Values":"","Importance":"high"}},{"name":"acceptable.recovery.lag","documentation":"The maximum acceptable lag (number of offsets to catch up) for a client to be considered caught-up enough to receive an active task assignment. Upon assignment, it will still restore the rest of the changelog before processing. To avoid a pause in processing during rebalances, this config should correspond to a recovery time of well under a minute for a given workload. Must be at least 0.","headers":{"Type":"long","Default":"10000","Valid Values":"[0,...]","Importance":"medium"}},{"name":"cache.max.bytes.buffering","documentation":"Maximum number of memory bytes to be used for buffering across all threads","headers":{"Type":"long","Default":"10485760","Valid Values":"[0,...]","Importance":"medium"}},{"name":"client.id","documentation":"An ID prefix string used for the client IDs of internal consumer, producer and restore-consumer, with pattern <code>&lt;client.id&gt;-StreamThread-&lt;threadSequenceNumber$gt;-&lt;consumer|producer|restore-consumer&gt;</code>.","headers":{"Type":"string","Default":"\"\"","Valid Values":"","Importance":"medium"}},{"name":"default.deserialization.exception.handler","documentation":"Exception handling class that implements the <code>org.apache.kafka.streams.errors.DeserializationExceptionHandler</code> interface.","headers":{"Type":"class","Default":"org.apache.kafka.streams.errors.LogAndFailExceptionHandler","Valid Values":"","Importance":"medium"}},{"name":"default.key.serde","documentation":"Default serializer / deserializer class for key that implements the <code>org.apache.kafka.common.serialization.Serde</code> interface. Note when windowed serde class is used, one needs to set the inner serde class that implements the <code>org.apache.kafka.common.serialization.Serde</code> interface via 'default.windowed.key.serde.inner' or 'default.windowed.value.serde.inner' as well","headers":{"Type":"class","Default":"null","Valid Values":"","Importance":"medium"}},{"name":"default.list.key.serde.inner","documentation":"Default inner class of list serde for key that implements the <code>org.apache.kafka.common.serialization.Serde</code> interface. This configuration will be read if and only if <code>default.key.serde</code> configuration is set to <code>org.apache.kafka.common.serialization.Serdes.ListSerde</code>","headers":{"Type":"class","Default":"null","Valid Values":"","Importance":"medium"}},{"name":"default.list.key.serde.type","documentation":"Default class for key that implements the <code>java.util.List</code> interface. This configuration will be read if and only if <code>default.key.serde</code> configuration is set to <code>org.apache.kafka.common.serialization.Serdes.ListSerde</code> Note when list serde class is used, one needs to set the inner serde class that implements the <code>org.apache.kafka.common.serialization.Serde</code> interface via 'default.list.key.serde.inner'","headers":{"Type":"class","Default":"null","Valid Values":"","Importance":"medium"}},{"name":"default.list.value.serde.inner","documentation":"Default inner class of list serde for value that implements the <code>org.apache.kafka.common.serialization.Serde</code> interface. This configuration will be read if and only if <code>default.value.serde</code> configuration is set to <code>org.apache.kafka.common.serialization.Serdes.ListSerde</code>","headers":{"Type":"class","Default":"null","Valid Values":"","Importance":"medium"}},{"name":"default.list.value.serde.type","documentation":"Default class for value that implements the <code>java.util.List</code> interface. This configuration will be read if and only if <code>default.value.serde</code> configuration is set to <code>org.apache.kafka.common.serialization.Serdes.ListSerde</code> Note when list serde class is used, one needs to set the inner serde class that implements the <code>org.apache.kafka.common.serialization.Serde</code> interface via 'default.list.value.serde.inner'","headers":{"Type":"class","Default":"null","Valid Values":"","Importance":"medium"}},{"name":"default.production.exception.handler","documentation":"Exception handling class that implements the <code>org.apache.kafka.streams.errors.ProductionExceptionHandler</code> interface.","headers":{"Type":"class","Default":"org.apache.kafka.streams.errors.DefaultProductionExceptionHandler","Valid Values":"","Importance":"medium"}},{"name":"default.timestamp.extractor","documentation":"Default timestamp extractor class that implements the <code>org.apache.kafka.streams.processor.TimestampExtractor</code> interface.","headers":{"Type":"class","Default":"org.apache.kafka.streams.processor.FailOnInvalidTimestamp","Valid Values":"","Importance":"medium"}},{"name":"default.value.serde","documentation":"Default serializer / deserializer class for value that implements the <code>org.apache.kafka.common.serialization.Serde</code> interface. Note when windowed serde class is used, one needs to set the inner serde class that implements the <code>org.apache.kafka.common.serialization.Serde</code> interface via 'default.windowed.key.serde.inner' or 'default.windowed.value.serde.inner' as well","headers":{"Type":"class","Default":"null","Valid Values":"","Importance":"medium"}},{"name":"max.task.idle.ms","documentation":"This config controls whether joins and merges may produce out-of-order results. The config value is the maximum amount of time in milliseconds a stream task will stay idle when it is fully caught up on some (but not all) input partitions to wait for producers to send additional records and avoid potential out-of-order record processing across multiple input streams. The default (zero) does not wait for producers to send more records, but it does wait to fetch data that is already present on the brokers. This default means that for records that are already present on the brokers, Streams will process them in timestamp order. Set to -1 to disable idling entirely and process any locally available data, even though doing so may produce out-of-order processing.","headers":{"Type":"long","Default":"0","Valid Values":"","Importance":"medium"}},{"name":"max.warmup.replicas","documentation":"The maximum number of warmup replicas (extra standbys beyond the configured num.standbys) that can be assigned at once for the purpose of keeping  the task available on one instance while it is warming up on another instance it has been reassigned to. Used to throttle how much extra broker  traffic and cluster state can be used for high availability. Must be at least 1.","headers":{"Type":"int","Default":"2","Valid Values":"[1,...]","Importance":"medium"}},{"name":"num.stream.threads","documentation":"The number of threads to execute stream processing.","headers":{"Type":"int","Default":"1","Valid Values":"","Importance":"medium"}},{"name":"processing.guarantee","documentation":"The processing guarantee that should be used. Possible values are <code>at_least_once</code> (default) and <code>exactly_once_v2</code> (requires brokers version 2.5 or higher). Deprecated options are <code>exactly_once</code> (requires brokers version 0.11.0 or higher) and <code>exactly_once_beta</code> (requires brokers version 2.5 or higher). Note that exactly-once processing requires a cluster of at least three brokers by default what is the recommended setting for production; for development you can change this, by adjusting broker setting <code>transaction.state.log.replication.factor</code> and <code>transaction.state.log.min.isr</code>.","headers":{"Type":"string","Default":"at_least_once","Valid Values":"[at_least_once, exactly_once, exactly_once_beta, exactly_once_v2]","Importance":"medium"}},{"name":"rack.aware.assignment.tags","documentation":"List of client tag keys used to distribute standby replicas across Kafka Streams instances. When configured, Kafka Streams will make a best-effort to distribute the standby tasks over each client tag dimension.","headers":{"Type":"list","Default":"\"\"","Valid Values":"List containing maximum of 5 elements","Importance":"medium"}},{"name":"replication.factor","documentation":"The replication factor for change log topics and repartition topics created by the stream processing application. The default of <code>-1</code> (meaning: use broker default replication factor) requires broker version 2.4 or newer","headers":{"Type":"int","Default":"-1","Valid Values":"","Importance":"medium"}},{"name":"security.protocol","documentation":"Protocol used to communicate with brokers. Valid values are: PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL.","headers":{"Type":"string","Default":"PLAINTEXT","Valid Values":"[PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL]","Importance":"medium"}},{"name":"statestore.cache.max.bytes","documentation":"Maximum number of memory bytes to be used for statestore cache across all threads","headers":{"Type":"long","Default":"10485760 (10 mebibytes)","Valid Values":"[0,...]","Importance":"medium"}},{"name":"task.timeout.ms","documentation":"The maximum amount of time in milliseconds a task might stall due to internal errors and retries until an error is raised. For a timeout of 0ms, a task would raise an error for the first internal error. For any timeout larger than 0ms, a task will retry at least once before an error is raised.","headers":{"Type":"long","Default":"300000 (5 minutes)","Valid Values":"[0,...]","Importance":"medium"}},{"name":"topology.optimization","documentation":"A configuration telling Kafka Streams if it should optimize the topology and what optimizations to apply. Acceptable values are: \"+NO_OPTIMIZATION+\", \"+OPTIMIZE+\", or a comma separated list of specific optimizations: (\"+REUSE_KTABLE_SOURCE_TOPICS+\", \"+MERGE_REPARTITION_TOPICS+\" + \"SINGLE_STORE_SELF_JOIN+\").\"NO_OPTIMIZATION\" by default.","headers":{"Type":"string","Default":"none","Valid Values":"org.apache.kafka.streams.StreamsConfig$$Lambda$17/0x000000080100daf8@26be92ad","Importance":"medium"}},{"name":"application.server","documentation":"A host:port pair pointing to a user-defined endpoint that can be used for state store discovery and interactive queries on this KafkaStreams instance.","headers":{"Type":"string","Default":"\"\"","Valid Values":"","Importance":"low"}},{"name":"auto.include.jmx.reporter","documentation":"Deprecated. Whether to automatically include JmxReporter even if it's not listed in <code>metric.reporters</code>. This configuration will be removed in Kafka 4.0, users should instead include <code>org.apache.kafka.common.metrics.JmxReporter</code> in <code>metric.reporters</code> in order to enable the JmxReporter.","headers":{"Type":"boolean","Default":"true","Valid Values":"","Importance":"low"}},{"name":"buffered.records.per.partition","documentation":"Maximum number of records to buffer per partition.","headers":{"Type":"int","Default":"1000","Valid Values":"","Importance":"low"}},{"name":"built.in.metrics.version","documentation":"Version of the built-in metrics to use.","headers":{"Type":"string","Default":"latest","Valid Values":"[latest]","Importance":"low"}},{"name":"commit.interval.ms","documentation":"The frequency in milliseconds with which to commit processing progress. For at-least-once processing, committing means to save the position (ie, offsets) of the processor. For exactly-once processing, it means to commit the transaction which includes to save the position and to make the committed data in the output topic visible to consumers with isolation level read_committed. (Note, if <code>processing.guarantee</code> is set to <code>exactly_once_v2</code>, <code>exactly_once</code>,the default value is <code>100</code>, otherwise the default value is <code>30000</code>.","headers":{"Type":"long","Default":"30000 (30 seconds)","Valid Values":"[0,...]","Importance":"low"}},{"name":"connections.max.idle.ms","documentation":"Close idle connections after the number of milliseconds specified by this config.","headers":{"Type":"long","Default":"540000 (9 minutes)","Valid Values":"","Importance":"low"}},{"name":"default.client.supplier","documentation":"Client supplier class that implements the <code>org.apache.kafka.streams.KafkaClientSupplier</code> interface.","headers":{"Type":"class","Default":"org.apache.kafka.streams.processor.internals.DefaultKafkaClientSupplier","Valid Values":"","Importance":"low"}},{"name":"default.dsl.store","documentation":"The default state store type used by DSL operators.","headers":{"Type":"string","Default":"rocksDB","Valid Values":"[rocksDB, in_memory]","Importance":"low"}},{"name":"metadata.max.age.ms","documentation":"The period of time in milliseconds after which we force a refresh of metadata even if we haven't seen any partition leadership changes to proactively discover any new brokers or partitions.","headers":{"Type":"long","Default":"300000 (5 minutes)","Valid Values":"[0,...]","Importance":"low"}},{"name":"metric.reporters","documentation":"A list of classes to use as metrics reporters. Implementing the <code>org.apache.kafka.common.metrics.MetricsReporter</code> interface allows plugging in classes that will be notified of new metric creation. The JmxReporter is always included to register JMX statistics.","headers":{"Type":"list","Default":"\"\"","Valid Values":"","Importance":"low"}},{"name":"metrics.num.samples","documentation":"The number of samples maintained to compute metrics.","headers":{"Type":"int","Default":"2","Valid Values":"[1,...]","Importance":"low"}},{"name":"metrics.recording.level","documentation":"The highest recording level for metrics.","headers":{"Type":"string","Default":"INFO","Valid Values":"[INFO, DEBUG, TRACE]","Importance":"low"}},{"name":"metrics.sample.window.ms","documentation":"The window of time a metrics sample is computed over.","headers":{"Type":"long","Default":"30000 (30 seconds)","Valid Values":"[0,...]","Importance":"low"}},{"name":"partition.autoscaling.enabled","documentation":"Enable autoscaling the partitions of internal topics which are managed by Streams. If an internal topic's partition count depends on an upstream input topic (or topics), then expanding the number of partitions on the input topic(s) will result in the internal topic(s) automatically being expanded to match.","headers":{"Type":"boolean","Default":"false","Valid Values":"","Importance":"low"}},{"name":"partition.autoscaling.timeout.ms","documentation":"The maximum amount of time in milliseconds that Streams will attempt to retry autoscaling of internal topic partitions.","headers":{"Type":"long","Default":"900000 (15 minutes)","Valid Values":"[0,...]","Importance":"low"}},{"name":"poll.ms","documentation":"The amount of time in milliseconds to block waiting for input.","headers":{"Type":"long","Default":"100","Valid Values":"","Importance":"low"}},{"name":"probing.rebalance.interval.ms","documentation":"The maximum time in milliseconds to wait before triggering a rebalance to probe for warmup replicas that have finished warming up and are ready to become active. Probing rebalances will continue to be triggered until the assignment is balanced. Must be at least 1 minute.","headers":{"Type":"long","Default":"600000 (10 minutes)","Valid Values":"[60000,...]","Importance":"low"}},{"name":"receive.buffer.bytes","documentation":"The size of the TCP receive buffer (SO_RCVBUF) to use when reading data. If the value is -1, the OS default will be used.","headers":{"Type":"int","Default":"32768 (32 kibibytes)","Valid Values":"[-1,...]","Importance":"low"}},{"name":"reconnect.backoff.max.ms","documentation":"The maximum amount of time in milliseconds to wait when reconnecting to a broker that has repeatedly failed to connect. If provided, the backoff per host will increase exponentially for each consecutive connection failure, up to this maximum. After calculating the backoff increase, 20% random jitter is added to avoid connection storms.","headers":{"Type":"long","Default":"1000 (1 second)","Valid Values":"[0,...]","Importance":"low"}},{"name":"reconnect.backoff.ms","documentation":"The base amount of time to wait before attempting to reconnect to a given host. This avoids repeatedly connecting to a host in a tight loop. This backoff applies to all connection attempts by the client to a broker.","headers":{"Type":"long","Default":"50","Valid Values":"[0,...]","Importance":"low"}},{"name":"repartition.purge.interval.ms","documentation":"The frequency in milliseconds with which to delete fully consumed records from repartition topics. Purging will occur after at least this value since the last purge, but may be delayed until later. (Note, unlike <code>commit.interval.ms</code>, the default for this value remains unchanged when <code>processing.guarantee</code> is set to <code>exactly_once_v2</code>).","headers":{"Type":"long","Default":"30000 (30 seconds)","Valid Values":"[0,...]","Importance":"low"}},{"name":"request.timeout.ms","documentation":"The configuration controls the maximum amount of time the client will wait for the response of a request. If the response is not received before the timeout elapses the client will resend the request if necessary or fail the request if retries are exhausted.","headers":{"Type":"int","Default":"40000 (40 seconds)","Valid Values":"[0,...]","Importance":"low"}},{"name":"retries","documentation":"Setting a value greater than zero will cause the client to resend any request that fails with a potentially transient error. It is recommended to set the value to either zero or `MAX_VALUE` and use corresponding timeout parameters to control how long a client should retry a request.","headers":{"Type":"int","Default":"0","Valid Values":"[0,...,2147483647]","Importance":"low"}},{"name":"retry.backoff.ms","documentation":"The amount of time to wait before attempting to retry a failed request to a given topic partition. This avoids repeatedly sending requests in a tight loop under some failure scenarios.","headers":{"Type":"long","Default":"100","Valid Values":"[0,...]","Importance":"low"}},{"name":"rocksdb.config.setter","documentation":"A Rocks DB config setter class or class name that implements the <code>org.apache.kafka.streams.state.RocksDBConfigSetter</code> interface","headers":{"Type":"class","Default":"null","Valid Values":"","Importance":"low"}},{"name":"send.buffer.bytes","documentation":"The size of the TCP send buffer (SO_SNDBUF) to use when sending data. If the value is -1, the OS default will be used.","headers":{"Type":"int","Default":"131072 (128 kibibytes)","Valid Values":"[-1,...]","Importance":"low"}},{"name":"state.cleanup.delay.ms","documentation":"The amount of time in milliseconds to wait before deleting state when a partition has migrated. Only state directories that have not been modified for at least <code>state.cleanup.delay.ms</code> will be removed","headers":{"Type":"long","Default":"600000 (10 minutes)","Valid Values":"","Importance":"low"}},{"name":"upgrade.from","documentation":"Allows upgrading in a backward compatible way. This is needed when upgrading from [0.10.0, 1.1] to 2.0+, or when upgrading from [2.0, 2.3] to 2.4+. When upgrading from 3.3 to a newer version it is not required to specify this config. Default is `null`. Accepted values are \"0.10.0\", \"0.10.1\", \"0.10.2\", \"0.11.0\", \"1.0\", \"1.1\", \"2.0\", \"2.1\", \"2.2\", \"2.3\", \"2.4\", \"2.5\", \"2.6\", \"2.7\", \"2.8\", \"3.0\", \"3.1\", \"3.2\", \"3.3\" (for upgrading from the corresponding old version).","headers":{"Type":"string","Default":"null","Valid Values":"[null, 0.10.0, 0.10.1, 0.10.2, 0.11.0, 1.0, 1.1, 2.0, 2.1, 2.2, 2.3, 2.4, 2.5, 2.6, 2.7, 2.8, 3.0, 3.1, 3.2, 3.3]","Importance":"low"}},{"name":"window.size.ms","documentation":"Sets window size for the deserializer in order to calculate window end times.","headers":{"Type":"long","Default":"null","Valid Values":"","Importance":"low"}},{"name":"windowed.inner.class.serde","documentation":" Default serializer / deserializer for the inner class of a windowed record. Must implement the <code>org.apache.kafka.common.serialization.Serde</code> interface. Note that setting this config in KafkaStreams application would result in an error as it is meant to be used only from Plain consumer client.","headers":{"Type":"string","Default":"null","Valid Values":"","Importance":"low"}},{"name":"windowstore.changelog.additional.retention.ms","documentation":"Added to a windows maintainMs to ensure data is not deleted from the log prematurely. Allows for clock drift. Default is 1 day","headers":{"Type":"long","Default":"86400000 (1 day)","Valid Values":"","Importance":"low"}}]
